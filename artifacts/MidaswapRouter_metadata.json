{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_custodyPositionManager",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_midasVault",
						"type": "address"
					},
					{
						"internalType": "contract ISwapRouter",
						"name": "_swapRouter",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "amountInMaximum",
						"type": "uint256[]"
					},
					{
						"internalType": "address[]",
						"name": "ftAddress",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "id",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amountOut",
						"type": "uint256[]"
					},
					{
						"internalType": "uint24[]",
						"name": "poolFee",
						"type": "uint24[]"
					}
				],
				"name": "buyERC1155",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amountIn",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "amountInMaximum",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "poolFee",
						"type": "uint24"
					}
				],
				"name": "buyERC721",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "amountInMaxium",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					}
				],
				"name": "buyERC721Conduit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint24",
						"name": "poolFee",
						"type": "uint24"
					},
					{
						"internalType": "uint160",
						"name": "sqrtPriceX96",
						"type": "uint160"
					}
				],
				"name": "createAndInitializePoolIfNecessary",
				"outputs": [
					{
						"internalType": "address",
						"name": "poolAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "subLiquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					}
				],
				"name": "decreaseLiquidity",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "remainLiquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountAdd0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAdd1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					}
				],
				"name": "increaseLiquidityFromFractions",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAdd0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAdd1",
						"type": "uint256"
					}
				],
				"name": "increaseLiquidityFromNFTs",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "midasVault",
				"outputs": [
					{
						"internalType": "contract MidasVault",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fractionAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint24",
								"name": "fee",
								"type": "uint24"
							},
							{
								"internalType": "int24",
								"name": "tickLower",
								"type": "int24"
							},
							{
								"internalType": "int24",
								"name": "tickUpper",
								"type": "int24"
							},
							{
								"internalType": "uint256",
								"name": "amount0Desired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Desired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct ICustodyPositionManager.MintParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "mintFromERC721Fractions",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "poolAddress",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint24",
								"name": "fee",
								"type": "uint24"
							},
							{
								"internalType": "int24",
								"name": "tickLower",
								"type": "int24"
							},
							{
								"internalType": "int24",
								"name": "tickUpper",
								"type": "int24"
							},
							{
								"internalType": "uint256",
								"name": "amount0Desired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Desired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct ICustodyPositionManager.MintParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "mintFromNFTs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "lpTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "id",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "ftAddress",
						"type": "address[]"
					},
					{
						"internalType": "uint24[]",
						"name": "poolFee",
						"type": "uint24[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amountIn",
						"type": "uint256[]"
					}
				],
				"name": "sellERC1155",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amountOut",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenId",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ftAddress",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "poolFee",
						"type": "uint24"
					}
				],
				"name": "sellERC721",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapRouter",
				"outputs": [
					{
						"internalType": "contract ISwapRouter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"mintFromERC721Fractions(address,address,(address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
					"notice": "This function only support for mint a new liquidity position from ERC721 fractions."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MidaswapRouter.sol": "MidaswapRouter"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
			"license": "MIT",
			"urls": [
				"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
				"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
			"keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
				"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
			]
		},
		"MidasVault.sol": {
			"keccak256": "0xa7b25f1f6884f2610543bca865aa323910a5f57c976b100a0d6708d53a910b62",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://1d90abb73fc2ba39144d85bc9744ec15aced501ed1dcce4e7e177be8440030ea",
				"dweb:/ipfs/QmdEiv52jGPtMwEjaCc4MNo3MWzWpNukRkDPSAaf7LRRNm"
			]
		},
		"MidaswapRouter.sol": {
			"keccak256": "0x015c734318a55da7bcae86b077bb1b6080143baf3c320656374b0881d9bf9d94",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://09372ec18fd57bfbe374852ac4b071a8444fe52e8c1c549777951a737ea148a7",
				"dweb:/ipfs/QmSQWVV3QUWDYSpUvX5weRBCrFweWgT7UhcQUCvFbMwHYH"
			]
		},
		"VToken.sol": {
			"keccak256": "0x1adba74803c91b13cf946b16a2913ddd48efdbd4b6e95d0b192f0d43d4ab225c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d92f3d25189ba0c71ec6e650379d7eefee66aafa41b42807efbb0d0f45a0881b",
				"dweb:/ipfs/QmQsTSsTm2hBCxfTDehNLxJx6jgFB1fCgs1o44evFaK61s"
			]
		},
		"interfaces/ISwapRouter.sol": {
			"keccak256": "0x99eab284dbc18eb958f0a2d545dd1bc29fa1b1c551df17bc63e44cc3417c0e5a",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://752dc443a5996362f7edfb9421a8cd678d93f6a3e8f19024f2d24610e0caad47",
				"dweb:/ipfs/Qme21R4r2ss82Amuogc1c5KjnBSrmPn9SgLkmRc5X3UsRD"
			]
		},
		"libraries/TickMath.sol": {
			"keccak256": "0xa98594ec631f1a56e8e68e4e5958884d96fa38bdf750da2d48093d8e3ed95c5b",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://71cd8737b935e3fb1cd7f857603b86ceae08bff79771dd401c4633860a950dd0",
				"dweb:/ipfs/Qmb2HjTQqzkhCy6UjdPwUxCcwyEb4Ru3Vjhih2AMVKroDt"
			]
		},
		"libraries/TransferHelper.sol": {
			"keccak256": "0xf000e3ca039460d65f6a93b95b29fd6e7a7ae70759ae4c2f8d5215317904950b",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://79243626d84905c1acc5dd9cddb9533bbcb1af0d1fffdf1cbe1edde476152dad",
				"dweb:/ipfs/QmQJY3byLgbuEjtuE1Mq461oDR1VKRFwkYM5SWsQtLwYfd"
			]
		}
	},
	"version": 1
}